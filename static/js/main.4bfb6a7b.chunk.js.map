{"version":3,"sources":["Components/Header.js","context/AppReducer.js","context/GlobalState.js","Components/Balance.js","Components/IncomeExpenses.js","Components/Transaction.js","Components/TransactionList.js","Components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","style","textAlign","marginBottom","state","action","type","loading","transactions","payload","filter","transaction","_id","updTransactions","localStorage","setItem","JSON","stringify","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","console","log","data","response","id","delete","config","headers","post","Provider","value","deleteTransaction","addTransaction","getTransactions","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","parseInt","htmlFor","onChange","target","placeholder","App","Container","Row","Col","sm","lg","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bfb6a7b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2 style={{textAlign: \"center\", marginBottom:\"20px\"}}>\r\n            Expense Tracker \r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'GET_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n\r\n        case 'DELETE_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_TRANSACTION':\r\n            const updTransactions = [...state.transactions, action.payload]\r\n            localStorage.setItem('transactions', JSON.stringify(updTransactions))\r\n            return{\r\n                ...state,\r\n                transactions: updTransactions\r\n            }\r\n\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {createContext, useReducer} from 'react'\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios'\r\n//Initial State \r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n//Provider Components\r\nexport const GlobalProvider = ({ children }) =>{\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    async function getTransactions(){\r\n        try {\r\n            const res = await axios.get('https://track-exp.herokuapp.com/api/v1/transactions')\r\n            console.log(res.data)\r\n            dispatch({\r\n                type: 'GET_TRANSACTION',\r\n                payload: res.data.data\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: error.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function deleteTransaction(id){\r\n        try {\r\n            await axios.delete(`https://track-exp.herokuapp.com/api/v1/transactions/${id}`)\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    async function addTransaction(data){\r\n        const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n      \r\n          try {\r\n            const res = await axios.post('https://track-exp.herokuapp.com/api/v1/transactions', data, config);\r\n            dispatch({\r\n              type: 'ADD_TRANSACTION',\r\n              payload: res.data.data\r\n            });\r\n          } catch (err) {\r\n            dispatch({\r\n              type: 'TRANSACTION_ERROR',\r\n              payload: err.response.data.error\r\n            });\r\n          }\r\n    }\r\n\r\n\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        deleteTransaction,\r\n        addTransaction,\r\n        getTransactions,\r\n\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Balance = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  \r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <h4>Your Balance</h4>\r\n            <h1 id=\"balance\">Rs. {total}</h1>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  \r\n    const income = amounts\r\n      .filter(item => item > 0)\r\n      .reduce((acc, item) => (acc += item), 0)\r\n      .toFixed(2);\r\n  \r\n    const expense = (\r\n      amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n      -1\r\n    ).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p id=\"money-plus\" className=\"money plus\">+ Rs. {income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p id=\"money-minus\" className=\"money minus\">- Rs. {expense}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Transaction = ({transaction}) => {\r\n\r\n    const {deleteTransaction} = useContext(GlobalContext)\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <div>\r\n            <li className={sign==='+' ? \"plus\" : \"minus\"}>\r\n                {transaction.text} <span>{sign}Rs.{Math.abs(transaction.amount)}</span><button className=\"delete-btn\" onClick={()=>{\r\n                    deleteTransaction(transaction._id)\r\n                }}>x</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, {useContext, useEffect} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport Transaction from './Transaction'\r\n\r\nconst TransactionList = () => {\r\n\r\n    const { transactions, getTransactions } = useContext(GlobalContext)\r\n    //console.log(context);\r\n    useEffect(()=>{\r\n        getTransactions();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (\r\n                    <Transaction transaction={transaction} key={transaction._id}/>\r\n                ))}\r\n                \r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nconst AddTransaction = () => {\r\n    const [text, setText] = useState(\"\")\r\n    const [amount, setAmount] = useState(0)\r\n    const {addTransaction} = useContext(GlobalContext)\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: parseInt(amount) \r\n        }\r\n        addTransaction(newTransaction);\r\n    }\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" id=\"text\" value={text} onChange={(e)=>{setText(e.target.value)}} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount <br />\r\n                        (negative - expense, positive - income)\r\n                    </label>\r\n                    <input type=\"number\" id=\"amount\" value={amount} onChange={(e)=>{setAmount(e.target.value)}} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React from 'react'\nimport Header from './Components/Header';\n\nimport Balance from './Components/Balance';\nimport IncomeExpenses from './Components/IncomeExpenses';\nimport TransactionList from './Components/TransactionList';\nimport AddTransaction from './Components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\nimport {Container, Row, Col} from 'reactstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nfunction App() {\n  return (\n    \n        <GlobalProvider>\n        <Header/> \n            <Container>\n                <Row>\n                    <Col sm=\"12\" lg=\"6\" md=\"12\">\n                        <Balance/>\n                        <IncomeExpenses/>\n                        <AddTransaction/> \n                    </Col>\n                    <Col sm=\"12\" lg=\"6\" md=\"12\">\n                        <TransactionList/>  \n                    </Col>\n                </Row>  \n\n            </Container>\n        </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}